# 3
На сколько увеличилось кол-во товаров: (Поступление - Продажа)

Прибыль: (Продажа - Покупка)
Выручка: (Продажа)

# 6
Лайфкаки:
1. Точки на линии учитывать не следует - шаг черепахи минус один * шаг черепахи минус один
2. Точки на линии учитывать следует - шаг черепахи плюс один * шаг черепахи плюс один
3. Периметр - шаг черепахи * шаг черепахи

# 8
Проверка, что есть не менее трех цифр с числовым значением более 9
    u = len([i for i in val if i not in '0123456789'])
    if u >= 3:

# 11
При этом используется посимвольное кодирование идентификаторов,
все символы кодируются одинаковым и минимально возможным количеством байт.
    При такой формулировке находим i = log2(N), округляем в большую сторону.
    Далее делим на 8 и снова округляем в большую сторону.

# 12
Заменяет первое справа вхождение (если символов несколько, переворачиваем заменяемые строки)
    st = st[::-1].replace('dlo', 'wen', 1)[::-1]

# 13
Основные команды:
1. ip = ip_address() - переводит текстовое представление ip-адреса в объект класса ipaddress
2. net = ip_network('ip/mask') - создает сеть / создает все адреса в текущей сети с определенной маской
3. net.network_address - адрес сети
4. net.broadcast_address - широковещательный адрес сети
5. net.netmask() - маска сети
6. net.hosts() - все узлы сети
7. net.num_addresses - кол-во адресов в сети (узлы + адрес сети + широковещательный)

# 25
    1. from itertools import product
    ans = []
    for p in range(5):
        for v in "0123456789":
            for z in product("0123456789", repeat=p):
                z = "".join(z)
                n = int("12" + z + "34" + v + "5")
                if n <= 10 ** 8:
                    if n % 2025 == 0:
                        ans.append([n, n // 2025])

    for i in sorted(ans):
        print(*i)

    2. from fnmatch import *
    for i in range(7993, 10 ** 10, 7993):
        if fnmatch(str(i), "4*4736*1"):
            if i % 7993 == 0:
                print(i, i // 7993)

